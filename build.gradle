buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }
}

project.ext.isDefaultEnvironment = !project.hasProperty('overrideBuildEnvironment')

File getEnvironmentScript()
{
  final File env = file(isDefaultEnvironment ? 'defaultEnvironment.gradle' : project.overrideBuildEnvironment)
  assert env.isFile() : "The environment script [$env] does not exists or is not a file."
  return env
}

apply from: environmentScript

def getScalaSuffix(scalaVersion) {
  def suffix = scalaVersion
  def pattern = suffix =~ /(2.1[0-1]).+/
  if (pattern.find()) {
    suffix = pattern.group(1)
  }
  return "_$suffix"
}

/* Helper to build OSGI package lists with explicit version spec.
 * By default the osgi plugin adds version range such as (0.6.91,1.0]
 * for import-package. To avoid missmatch we want exact version.
 * Downside: Manual package lists in gradle...
 * Alternative is to use -consumer-policy directive to force ==, but
 * that applies to external imports too which is undesired.
 */
def createOsgiVersionedPackageList(pkgs) {
  def out = []
  for(String pkg: pkgs){
    out.add(pkg + ';version="'+version+'"')
  }
  return out.join(',')
}

subprojects {
  // the cross built scala modules share the same source directories so we need to make their output directories unique
  buildDir = "${rootProject.buildDir}/$name"

  plugins.withType(JavaPlugin) {
    project.dependencies {
      testCompile externalDependency.junit
    }

    project.apply from: "$rootDir/gradle/publishing.gradle"
  }

  def projectScalaVersion = properties.targetScalaVersions.split(',').find { name.contains(getScalaSuffix(it)) }
  ext.scalaVersion = projectScalaVersion ? projectScalaVersion : properties.defaultScalaVersion
  ext.scalaSuffix = getScalaSuffix(ext.scalaVersion)

  ext.externalDependency = [
    'zookeeper':'org.apache.zookeeper:zookeeper:3.3.4',
    'protobuf':'com.google.protobuf:protobuf-java:2.4.0a',
    'log4j':'log4j:log4j:1.2.17',
    'netty':'io.netty:netty:3.7.0.Final',
    'slf4jApi':'org.slf4j:slf4j-api:1.7.5',
    'slf4jLog4j':'org.slf4j:slf4j-log4j12:1.7.5',
    'specs':'org.scala-tools.testing:specs_2.10:1.6.9',
    'specs2':'org.specs2:specs2_2.11:3.7',
    'cglib':'cglib:cglib:2.1_3',
    'objenesis':'org.objenesis:objenesis:1.2',
    'scalaXml': 'org.scala-lang.modules:scala-xml_2.11:1.2.0',
    'scalaCompiler': "org.scala-lang:scala-compiler:${ext.scalaVersion}",
    'scalaLibrary': "org.scala-lang:scala-library:${ext.scalaVersion}",
    'scalaActors': "org.scala-lang:scala-actors:${ext.scalaVersion}",
    'junit':'junit:junit:4.8.1'
  ];

}
